name: Deploy Parse Server

on:
  push:
    branches:
      - main

env:
  PARSE_APP_ID: ${{ secrets.PARSE_APP_ID }}
  PARSE_MASTER_KEY: ${{ secrets.PARSE_MASTER_KEY }}
  PARSE_JAVASCRIPT_KEY: ${{ secrets.PARSE_JAVASCRIPT_KEY }}
  PARSE_SERVER_URL: ${{ secrets.PARSE_SERVER_URL }}
  PARSE_DATABASE_URI: ${{ secrets.PARSE_DATABASE_URI }}
  PARSE_PORT_NUMBER: ${{ secrets.PARSE_PORT_NUMBER }}
  PARSE_APP_NAME: ${{ secrets.PARSE_APP_NAME }}
  PARSE_CLOUD_CODE_MAIN: ${{ secrets.PARSE_CLOUD_CODE_MAIN }}
  PARSE_DASHBOARD_USER: ${{ secrets.PARSE_DASHBOARD_USER }}
  PARSE_DASHBOARD_PASS: ${{ secrets.PARSE_DASHBOARD_PASS }}

jobs:
  deploy-parse-server:
    name: Deploy Parse Server
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js 20
      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Step 3: Ensure target directory exists
      - name: Ensure Target Directory Exists
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo mkdir -p /var/www/parse-server
            sudo chown -R $USER:$USER /var/www/parse-server

      # Step 4: Upload Parse Server files
      - name: Upload Parse Server files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: .
          target: /var/www/parse-server/

      # Step 5: Create .env file
      - name: Create .env File
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cat <<EOF > /var/www/parse-server/.env
            PARSE_APP_ID=${{ secrets.PARSE_APP_ID }}
            PARSE_MASTER_KEY=${{ secrets.PARSE_MASTER_KEY }}
            PARSE_JAVASCRIPT_KEY=${{ secrets.PARSE_JAVASCRIPT_KEY }}
            PARSE_SERVER_URL=${{ secrets.PARSE_SERVER_URL }}
            PARSE_DATABASE_URI=${{ secrets.PARSE_DATABASE_URI }}
            PARSE_PORT_NUMBER=${{ secrets.PARSE_PORT_NUMBER }}
            PARSE_APP_NAME=${{ secrets.PARSE_APP_NAME }}
            PARSE_CLOUD_CODE_MAIN=${{ secrets.PARSE_CLOUD_CODE_MAIN }}
            PARSE_DASHBOARD_USER=${{ secrets.PARSE_DASHBOARD_USER }}
            PARSE_DASHBOARD_PASS=${{ secrets.PARSE_DASHBOARD_PASS }}
            EOF

      # Step 6: Ensure Node.js 20 and PM2 are installed on the droplet
      - name: Ensure Node.js 20 and PM2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            if ! command -v pm2 &> /dev/null; then
              sudo npm install -g pm2
            fi
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt-get install -y nodejs

            # Set Node.js 20 as the default version for the shell
            sudo npm install -g n
            sudo n 20

            # Verify Node.js installation
            node -v
            npm -v

      # Step 7: Install project dependencies
      - name: Install Dependencies
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/parse-server
            yarn install

      # Step 8: Start or reload Parse Server using PM2 with yarn start
      - name: Start or Reload Parse Server with PM2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/parse-server
            if pm2 list | grep -q parse-server; then
              pm2 reload parse-server
            else
              pm2 start yarn --name parse-server -- start
            fi
